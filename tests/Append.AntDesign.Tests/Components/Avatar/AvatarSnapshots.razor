@inherits TestComponentBase

<SnapshotTest Description="Basic"
              Setup="SetupMocking">
    <TestInput>
        <Avatar Icon="IconType.Outlined.User" Size="Size.Large" />
        <Avatar Icon="IconType.Outlined.User" />
        <Avatar Icon="IconType.Outlined.User" Size="Size.Small" />
        <Avatar Icon="IconType.Outlined.User" Shape="AvatarShape.Square" Size="Size.Large" />
        <Avatar Icon="IconType.Outlined.User" Shape="AvatarShape.Square" />
        <Avatar Icon="IconType.Outlined.User" Shape="AvatarShape.Square" Size="Size.Small" />
    </TestInput>
    <ExpectedOutput>
        <span class="ant-avatar ant-avatar-lg ant-avatar-circle ant-avatar-icon">
            <span diff:ignore role="img" />
        </span>
        <span class="ant-avatar ant-avatar-circle ant-avatar-icon">
            <span diff:ignore role="img" />
        </span>
        <span class="ant-avatar ant-avatar-sm ant-avatar-circle ant-avatar-icon">
            <span diff:ignore role="img" />
        </span>
        <span class="ant-avatar ant-avatar-lg ant-avatar-square ant-avatar-icon">
            <span diff:ignore role="img" />
        </span>
        <span class="ant-avatar ant-avatar-square ant-avatar-icon">
            <span diff:ignore role="img" />
        </span>
        <span class="ant-avatar ant-avatar-sm ant-avatar-square ant-avatar-icon">
            <span diff:ignore role="img" />
        </span>
    </ExpectedOutput>
</SnapshotTest>


<SnapshotTest Description="Auto Set"
              Setup="SetupMocking">
    <TestInput>
        <Avatar Size="Size.Large">
            U
        </Avatar>
    </TestInput>
    <ExpectedOutput>
        <span class="ant-avatar ant-avatar-circle ant-avatar-lg">
            <span style="transform: scale(1) translateX(-50%);" class="ant-avatar-string">U</span>
        </span>
    </ExpectedOutput>
</SnapshotTest>

<SnapshotTest Description="Type"
              Setup="SetupMocking">
    <TestInput>
        <Avatar Icon="IconType.Outlined.User"/>
        <Avatar ImageSource="https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png" />
        <Avatar style="color: #f56a00; background-color: #fde3cf">U</Avatar>
        <Avatar style="background-color: #87d068" Icon="IconType.Outlined.User" />
    </TestInput>
    <ExpectedOutput>
        <span class="ant-avatar ant-avatar-circle ant-avatar-icon">
            <span role="img" diff:ignore></span>
        </span>
        <span class="ant-avatar ant-avatar-circle ant-avatar-image">
            <img src="https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png">
        </span>
        <span class="ant-avatar ant-avatar-circle" style="color: rgb(245, 106, 0); background-color: rgb(253, 227, 207);">
            <span class="ant-avatar-string" style="transform: scale(1) translateX(-50%);">U</span>
        </span>
        <span class="ant-avatar ant-avatar-circle ant-avatar-icon" style="background-color: rgb(135, 208, 104);">
            <span role="img" diff:ignore/>
        </span>
    </ExpectedOutput>
</SnapshotTest>

@code{
    MockJsRuntimeInvokeHandler MockJsRuntime { get; set; } = default!;

    private void SetupMocking(SnapshotTest test)
    {
        test.Services.AddSingleton<IIconService, IconServiceMock>();
        test.Services.AddMockJsRuntime();
    }
}
